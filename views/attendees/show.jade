extends ../layout

block content
    ol(class="breadcrumb")
        li
            a(href=from==='search'?'/':'/attendees')= from==='search'?'Search':'Attendees'
        li(class="active")= attendee.name


    h2=attendee.name
    div(class="alert alert-info",id="alert-messages")

    div(class='row')
        div(class='col-sm-12')
            table(class='table table-striped table-condensed')
                thead
                    tr
                        th Name
                        th Email
                        th Type
                        th Registered
                        th Checked In
                        th Badged
                        for field in session.currentEvent.displayFields
                            th(class="property-name")= field
                tbody
                    tr
                        td(id='attendee-#{attendee.id}-name' class='editable editable-text')= attendee.name
                        td(id='attendee-#{attendee.id}-email' class='editable editable-text')= attendee.email
                        td(id='attendee-#{attendee.id}-type' class='editable editable-text')= attendee.type
                        td(id='attendee-#{attendee.id}-registered' class='registered')= attendee.registered?'Yes':'No'
                        td(id='attendee-#{attendee.id}-checked-in' class='checked-in')= attendee.checked_in?'Yes':'No'
                        td(id='attendee-#{attendee.id}-badged' class='badged')= attendee.badged?'Yes':'No'
                        for field in session.currentEvent.displayFields
                            td(id='attendee-#{attendee.id}-data-#{field}' class="property-name editable editable-#{session.currentEvent.importer.rules.attendee[field].type||'text'}")= attendee.data[field]

    for note in attendee.notes
        -if (! note.cleared)
            .alert.alert-dismissible(role="alert",class="alert-info fade in note", id='note-#{note.id}')
                button.close(type="button",data-dismiss="alert" aria-label="Close")
                    span(aria-hidden="true")  &times;
                p= note.contents
                p
                    button(class="btn btn-primary btn-sm note-clear" note-id='#{note.id}') Clear

    div(class='row')
        div(class='col-sm-12')

            div(class='registered-actions btn-toolbar')
                form(method="POST", action="/attendees/#{attendee.id}/checkin?badge=true", id='check-in-and-badge-form')
                    button#checkin(class='btn btn-primary btn-checkin-badge' data-id="#{attendee.id}") <u>C</u>heck In and Badge

                button#badge(class='btn btn-default btn-checkin' data-id="#{attendee.id}") Check <u>I</u>n

                button#badge(class='btn btn-default btn-badge' data-id="#{attendee.id}")= attendee.badged?'<u>B</u>adge Again':'Print <u>B</u>adge'

                button#register(class='btn btn-default btn-unregister' data-id="#{attendee.id}") <u>U</u>nregister

            div(class="unregistered-actions btn-toolbar")
                button#register(class='btn btn-primary btn-register' data-id="#{attendee.id}") <u>R</u>egister

    -if (audits.length && checkPermission('eventadmin'))
        h3 History
        div(class='row')
            div(class='col-sm-12')
                table(class='table table-striped table-condensed')
                    thead
                        tr
                            th ID
                            th Timestamp
                            th User
                            th Action
                            th Details

                    tbody
                        for audit in audits
                            tr
                                td= audit.id
                                td= moment(audit.created).format('MMMM DD YYYY, HH:mm:ss')
                                td
                                    - if (checkPermission('admin'))
                                        a(href='/users/#{audit.user_id}')= audit.user
                                    - else
                                        = audit.user
                                td= audit.action
                                td
                                    - if (_.has(audit.data, 'field'))
                                        - if (audit.data.old && audit.data.new)
                                            | Changed #{audit.data.field} from #{audit.data.old} to #{audit.data.new}
                                        - else if (audit.data.old)
                                            | Cleared #{audit.data.field} ( was #{audit.data.old} )
                                        - else
                                            | Set #{audit.data.field} to #{audit.data.new}
                                    - else if (_.has(audit.data, 'note'))
                                        | Note #{audit.data.note}
                    tfoot
                        +pager

append scripts
    script(src='/javascripts/data-table.js')
    script.

        allowKeypress = true;
        showActions();

        $('.editable').on('click', function(){
            allowKeypress = false;
        });


        $('.editable-text').editable('/attendees/update', {
            placeholder: 'Click to set a new value',
            callback: function(){
                allowKeypress = true;
            }
        });
        $('.editable-boolean').editable('/attendees/update', {
            data   : " {'Yes':'Yes', 'No':'No' }",
            type   : 'select',
            onblur : 'submit',
            callback: function(){
                allowKeyPress = true;
                showActions();
            }
        });
        $('.editable-pronouns').editable(function(value, settings){
            var id = $(this).attr('id');
            if (value === 'Other'){
                value = prompt('Please enter value')
            }
            $.post('/attendees/update', {id: id, value:value}, function(data){
                $(id).text(data);
            });
            return (value);

        }, {
            cssclass: 'edit-pronouns',
            loadurl: '/pronouns',
            type   : 'select',
            submit : 'OK',
            callback: function(){
                allowKeypress = true;
            }
        });

        // $('.btn-checkin-badge').click(checkInAndBadge);

        $('.btn-checkin').click(checkIn);
        $('.btn-register').click(register);
        $('.btn-unregister').click(unregister);
        $('.btn-badge').click(badge);
        $('.note-clear').click(clearNote);

        function showActions(){
            var registered = $('.registered').text();
            var badged = $('.badged').text();
            var checkedIn = $('.checked-in').text();

            if (checkedIn === 'Yes'){
                $('.btn-checkin-badge').hide();
                $('.btn-checkin').hide();
                $('.btn-unregister').hide();
            } else {
                $('.btn-checkin-badge').show();
                $('.btn-checkin').show();
                $('.btn-unregister').show();
            }

            if (badged === 'Yes'){
                $('.btn-badge').html('<u>B</u>adge Again');
            } else {
                $('.btn-badge').html('Print <u>B</u>adge');
            }

            if (registered === 'Yes'){
                $('.registered-actions').show();
                $('.unregistered-actions').hide();
            } else {
                $('.registered-actions').hide();
                $('.unregistered-actions').show();
            }

        }
        var metaHeld = false;

        $(document).keydown(function(event){

            var keycode = event.which;

            if (keycode < 65 || keycode >90){
                metaHeld = true;
            }
            if (allowKeypress && !metaHeld){
                console.log(keycode);

                if(keycode === 67){ // c
                    $('#check-in-and-badge-form').submit();
                } else if ( keycode === 66) { // b
                    badge();
                } else if ( keycode === 73) { // i
                    checkIn();
                } else if (keycode === 85) { // u
                    unregister();
                } else if ( keycode === 82) { // r
                    register();
                }
            }
        });

        $(document).keyup(function(event){

            var keycode = event.which;

            if (keycode < 65 || keycode >90){
                metaHeld = false;
            }
        });

        function checkIn(){
            if ($('#attendee-'+id+'-checked-in').text() === 'Yes'){
                return;
            }
            var id = $('.btn-checkin').attr('data-id');
            $.ajax({
                method:'POST',
                url: '/api/attendees/' + id + '/checkin',
                success: function(data){
                    if (data.success){
                        $('#attendee-'+id+'-checked-in').text('Yes');
                        showActions();
                        showAlert('success', 'Checked In');
                    }
                }
            });
        }

        function badge(){
            var id = $('.btn-badge').attr('data-id');
            console.log('badging');
            $.ajax({
                method: 'POST',
                url: '/api/attendees/' + id + '/badge',
                success: function(data){
                    if (data.success){
                        $('#attendee-'+id+'-badged').text('Yes');
                        showActions();
                        showAlert('success','Printed Badge');
                    }
                }
            });
        }
        function register(){
            var id = $('.btn-register').attr('data-id');
            if ($('#attendee-'+id+'-registered').text() === 'Yes'){
                return;
            }
            $.ajax({
                method: 'POST',
                url: '/api/attendees/' + id + '/register',
                success: function(data){
                    if (data.success){
                        $('#attendee-'+id+'-registered').text('Yes');
                        showActions();
                        showAlert('success','Registered');
                    }
                }
            });
        }
        function unregister(){
            var id = $('.btn-unregister').attr('data-id');
            if ($('#attendee-'+id+'-registered').text() === 'No'){
                return;
            }
            $.ajax({
                method: 'POST',
                url: '/api/attendees/' + id + '/unregister',
                success: function(data){
                    if (data.success){
                        $('#attendee-'+id+'-registered').text('No');
                        showActions();
                        showAlert('success','Unregistered');
                    }
                }
            });
        }

        function clearNote(){
            var id = $(this).attr('note-id');
            $.ajax({
                method: 'PUT',
                url: '/api/notes/'+id + '/clear',
                success: function(data){
                    if (data.success){
                        $('#note-'+id).alert('close');
                    }
                }
            });
        }

